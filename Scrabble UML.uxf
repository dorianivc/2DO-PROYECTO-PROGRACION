<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>91</y>
      <w>217</w>
      <h>238</h>
    </coordinates>
    <panel_attributes>Fichas
-
-string letra;
	-int valor;
	-int totalFichas;
	-int cantidadDisponible;

-
Fichas(string,string,string);
	+string toString();
	+string getLetra();
	+int getCantidadDisponible();
	+void setLetra(string);//para cuando sea ficha comodin;
	+int getValor();
	+void utilizarFicha();
	+~Fichas();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>364</x>
      <y>77</y>
      <w>182</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>Jugador
-
-string nombre;
	-int puntuacion;
	-Palabra* laPalabra;
	-ListaFichas * sieteFichas;
-
Jugador(string, ListaFichas*);
	+string getNombre();
	+int getPuntuacion();
	+void sumarPuntuacion(int);
	+Palabra* getPalabra();
	+void setPalabra(Palabra*);
	+ListaFichas* getFichasJugador();
	+string toString();
	+~Jugador();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>665</x>
      <y>91</y>
      <w>196</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>Palabra
-
-string laPalabra;
-int bonos, valorSimple, valorTotal;
-ListaFichas* palabraFormada;
-
+Palabra(ListaFichas*);
+void actualizarBono(int);
	+void setListaPalabraFormada(ListaFichas*);
	+ListaFichas* getPalabraFormada();
	+string getLaPalabra();
	+int getValorTotal();
	+string toString();
	+~Palabra();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>56</x>
      <y>371</y>
      <w>294</w>
      <h>259</h>
    </coordinates>
    <panel_attributes>Tablero
-
	string tablero[13][13];
	ListaFichas* fichasConocidas;
-
Tablero();
	+string getTablero(int, int);
	+void setFichasConocidas(ListaFichas*);
	+ListaFichas* getFichasConocidas();
	+string toString();
	+~Tablero();
	+void insertarPalabraHorizontalInicio(Palabra*, int, int);
	+void insertarPalabraVerticalInico(Palabra*, int, int);
	+string getLetrasDeCasillas(int, int);
	+bool verificarCasillas(int, int);
	+bool verificadorEspacioDePalabraHorizontal(int, int, Palabra*);
	+bool verificadorEspacioDePalabraVertical(int, int, Palabra*);
	+void insertarLetrasInicioPalabraHorizontal(int, int, Palabra*);
	+void insertarLetrasInicioPalabraVertical(int, int, Palabra*);
	+string imprimeInstrucciones();
	</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>539</x>
      <y>385</y>
      <w>392</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Juego
-
-Jugador* A;
-Jugador* B;
-Tablero* tablero;
-Lista* Diccionario;
-
+Juego(Jugador*, Jugador*, Tablero*, Lista*);
+ListaFichas* crearPrimeraPalabra(int);
+	void JugarPrimeraParte();
+	bool insertarFichasHorizontalInicio(int, int, Palabra*);
+	bool insertarFichasVerticalInicio(int, int, Palabra*);
+	bool insertarFichasHorizontalFinal(int, int, Palabra*);
+	bool insertarFichasVerticalFinal(int, int, Palabra*);
+	int retornaValor(char letra);
+	bool verificarPalabra(Palabra* , int );//Al usar este metodo validar para que solamente pueda digitar entre valores 1 y 2;
+	Jugador* getA();
+	Jugador* getB();
+	Tablero* getTablero();
+	Lista* getDiccionario();
+	~Juego();</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
